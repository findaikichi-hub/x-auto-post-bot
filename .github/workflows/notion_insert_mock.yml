name: Notion Insert Mock

on:
  workflow_dispatch:

jobs:
  notion-insert-mock:
    runs-on: ubuntu-latest
    env:
      RSS_URL: ${{ secrets.RSS_URL }}
      DEEPL_API_KEY: ${{ secrets.DEEPL_API_KEY }}
      NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
      NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
      X_API_KEY: ${{ secrets.X_API_KEY }}
      X_API_SECRET: ${{ secrets.X_API_SECRET }}
      X_ACCESS_TOKEN: ${{ secrets.X_ACCESS_TOKEN }}
      X_ACCESS_SECRET: ${{ secrets.X_ACCESS_SECRET }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
      - name: チェックアウト
        uses: actions/checkout@v4

      - name: Python セットアップ
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: 依存パッケージインストール
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: モックのNotion登録を実行
        run: |
          set -e
          echo "=== 運用テスト実行中 ==="
          echo "モックのNotion登録を実行中..."
          python scripts/notion_mock.py

      - name: Slack通知（成功時）
        if: success()
        run: |
          set -e
          SUCCESS_MSG="✅ Notion Insert Mock 成功"
          PAYLOAD=$(jq -n --arg text "$SUCCESS_MSG" '{text: $text}')
          curl -X POST -H 'Content-type: application/json' --data "$PAYLOAD" "$SLACK_WEBHOOK_URL"

      - name: Slack通知（失敗時）
        if: failure()
        run: |
          set -e
          FAIL_MSG="❌ Notion Insert Mock 失敗"
          PAYLOAD=$(jq -n --arg text "$FAIL_MSG" '{text: $text}')
          curl -X POST -H 'Content-type: application/json' --data "$PAYLOAD" "$SLACK_WEBHOOK_URL"
