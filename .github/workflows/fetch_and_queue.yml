name: Fetch and Queue News

on:
  workflow_dispatch:

jobs:
  fetch-news:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install requests feedparser

      - name: Run fetch_and_queue script
        env:
          DEEPL_API_KEY: ${{ secrets.DEEPL_API_KEY }}
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DB_DRAFT_ID: ${{ secrets.NOTION_DB_DRAFT_ID }}
          RSS_URL: "https://feeds.bbci.co.uk/news/world/rss.xml"
        run: |
          python3 << 'EOF'
          import os
          import requests
          import feedparser

          DEEPL_API_KEY = os.getenv("DEEPL_API_KEY")
          NOTION_TOKEN = os.getenv("NOTION_TOKEN")
          NOTION_DB_DRAFT_ID = os.getenv("NOTION_DB_DRAFT_ID")
          RSS_URL = os.getenv("RSS_URL")

          # Fetch RSS feed
          feed = feedparser.parse(RSS_URL)
          for entry in feed.entries[:5]:
              title = entry.title
              url = entry.link

              # Translate title via DeepL
              resp = requests.post(
                  "https://api-free.deepl.com/v2/translate",
                  data={
                      "auth_key": DEEPL_API_KEY,
                      "text": title,
                      "target_lang": "JA"
                  }
              )
              jp_title = resp.json()["translations"][0]["text"]

              # Add to Notion
              notion_payload = {
                  "parent": {"database_id": NOTION_DB_DRAFT_ID},
                  "properties": {
                      "記事タイトル": {"title": [{"text": {"content": jp_title}}]},
                      "URL": {"url": url},
                      "Status": {"select": {"name": "draft"}}
                  }
              }
              requests.post(
                  "https://api.notion.com/v1/pages",
                  headers={
                      "Authorization": f"Bearer {NOTION_TOKEN}",
                      "Content-Type": "application/json",
                      "Notion-Version": "2022-06-28"
                  },
                  json=notion_payload
              )

          print("✅ News fetched and queued in Notion")
          EOF
