name: Notion Insert prod

on:
  workflow_dispatch:

jobs:
  insert_production:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install & verify Python dependencies
        run: |
          set -e
          python -m pip install --upgrade pip
          python -m pip install feedparser deep-translator requests beautifulsoup4
          python - <<'PY'
          import sys, pkgutil
          required = ["feedparser","deep_translator","requests","bs4"]
          missing = [m for m in required if pkgutil.find_loader(m) is None]
          if missing:
              print("Missing modules:", ", ".join(missing), file=sys.stderr)
              sys.exit(1)
          PY

      - name: Validate required secrets for PRODUCTION
        env:
          _RSS_URL: ${{ secrets.RSS_URL }}
          _DEEPL_API_KEY: ${{ secrets.DEEPL_API_KEY }}
          _NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          _NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
        run: |
          set -e
          for secret in _RSS_URL _NOTION_API_KEY _NOTION_DATABASE_ID; do
            if [ -z "${!secret}" ]; then
              echo "❌ Required secret is missing: $secret" >&2
              exit 1
            fi
          done
          echo "✅ All required secrets for PRODUCTION are present."

      - name: Backup repository to local-like storage
        run: |
          set -e
          BACKUP_DIR="local_backups/$(date +'%Y%m%d_%H%M%S')"
          mkdir -p "$BACKUP_DIR"
          rsync -av --exclude "local_backups" ./ "$BACKUP_DIR"/
          echo "✅ Backup completed at $BACKUP_DIR"

      - name: Run production Notion insert
        env:
          RSS_URL: ${{ secrets.RSS_URL }}
          DEEPL_API_KEY: ${{ secrets.DEEPL_API_KEY }}
          NOTION_API_KEY: ${{ secrets.NOTION_API_KEY }}
          NOTION_DATABASE_ID: ${{ secrets.NOTION_DATABASE_ID }}
        run: |
          set -e
          echo "=== 本番 Notion 登録開始 ==="
          python scripts/notion_insert.py
          echo "✅ 本番 Notion 登録が完了しました"

      - name: Send Slack notification (success)
        if: success()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            { "text": "✅ Notion登録（本番）が成功しました" }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      - name: Send Slack notification (failure)
        if: failure()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            { "text": "❌ Notion登録（本番）が失敗しました（依存/Secrets/実行を確認してください）" }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
